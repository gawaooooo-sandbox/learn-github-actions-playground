name: Deploy to testing environment
run-name: ${{ github.workflow }}

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'public/**'
      - '.editorconfig'
      - '.gitignore'

jobs:
  lint:
    uses: gawaooooo-sandbox/learn-github-actions-reusable-workflows/.github/workflows/reusable-lint.yml@main
    with:
      install-options: '--ignore-scripts'
      enable-format-check: true
      enable-type-check: true
      typecheck-script: 'npm run type:check'

  test:
    uses: ./.github/workflows/test.yml

  merge-branch:
    needs: [lint, test]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: write

    steps:
      - name: Merge branch
        uses: everlytic/branch-merge@c4a244dc23143f824ae6c022a10732566cb8e973 # v1.1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # # @see https://docs.github.com/ja/enterprise-cloud@latest/actions/learn-github-actions/contexts#github-context
          # # pull request の マージブランチ(マージ対象のブランチとマージした結果の状態を持つブランチ)をdevelopにマージする
          # source_ref: ${{github.ref}}

          # プルリクエスト元のブランチをdevelopにマージする
          # @see https://docs.github.com/ja/enterprise-cloud@latest/actions/learn-github-actions/contexts#github-context
          source_ref: ${{github.head_ref}}
          target_branch: develop

  deploy:
    needs: [merge-branch]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    environment: alpha

    steps:
      - name: Setup Node.js and Install dependencies
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/node-npm-setup@main
        with:
          checkout-ref: develop

      - name: Build
        run: npm run generate
        env:
          BASE_URL: ${{vars.BASE_URL}}

      - name: Deploy to testing environment
        run: |
          echo "Deploying to testing environment"
          ls -la dist/
          echo "${{vars.TEST_HOGE}}"
