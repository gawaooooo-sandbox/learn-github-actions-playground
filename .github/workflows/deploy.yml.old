name: Deploy to Selected Environment
run-name: Deployt to ${{ inputs.environment }} on ${{ github.ref_type }} ${{ github.ref_name }} [${{ github.sha }}]

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (alpha|prod)'
        required: true
        type: environment
        default: 'prod'
      # environment:
      #   description: 'Environment to deploy to'
      #   required: true
      #   type: choice
      #   default: 'prod'
      #   options:
      #     - 'prod'
      #     - 'alpha'

jobs:
  # setup:
  #   runs-on: ubuntu-22.04
  #   outputs:
  #     branch: ${{ steps.checkout.outputs.branch }}
  #   steps:
  #     - name: Checkout branch
  #       id: checkout
  #       # environment == production の場合は main ブランチをチェックアウト
  #       # environment == alpha の場合は develop ブランチをチェックアウト
  #       # それ以外の場合はエラー
  #       run: |
  #         if [[ inputs.environment == 'prod' ]]; then
  #           echo "branch=main" >> $GITHUB_OUTPUT
  #         elif [[ inputs.environment == 'alpha' ]]; then
  #           echo "branch=develop" >> $GITHUB_OUTPUT
  #         else
  #           echo "Invalid environment: ${{ inputs.environment }}"
  #           exit 1
  #         fi

  pre-processing:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: create inputs summary
        uses: gawaooooo-sandbox/learn-github-actions-custom/composite/inputs-summary@main
        with:
          workflow-inputs: ${{ toJSON(inputs) }}

  # environment variable を reusable workflow に設定するために OUTPUT を使う
  setup:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    environment: ${{ inputs.environment }}
    outputs:
      BASE_URL: ${{ steps.base-url.outputs.base-url }}
      TEST_HOGE: ${{ steps.test-hoge.outputs.test-hoge }}
      S3_URI: ${{ steps.s3-uri.outputs.s3-uri }}
    steps:
      - id: base-url
        run: echo "base-url=${{ vars.BASE_URL}}" >> "$GITHUB_OUTPUT"
      - id: test-hoge
        run: echo "test-hoge=${{ vars.TEST_HOGE }}" >> "$GITHUB_OUTPUT"
      - id: s3-uri
        run: echo "s3-uri=${{ vars.S3_URI }}" >> "$GITHUB_OUTPUT"

  deploy:
    needs: [setup]
    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: true
    uses: gawaooooo-sandbox/learn-github-actions-reusable-workflows/.github/workflows/reusable-deploy.yml@main
    with:
      environment: ${{ inputs.environment }}
      # checkout-ref: develop
      build-environments: '["BASE_URL=${{needs.setup.outputs.BASE_URL}}", "TEST_HOGE=${{ needs.setup.outputs.TEST_HOGE }}"]'
      s3-sync-command: ./dist ${{needs.setup.outputs.S3_URI}} --delete --dryrun --exclude "*.map"
      use-aws: false
    secrets:
      node-auth-token: ${{ secrets.GITHUB_TOKEN }}
      aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
    permissions:
      contents: read
      packages: read
      id-token: write

  # deploy:
  #   runs-on: ubuntu-22.04
  #   timeout-minutes: 10
  #   concurrency:
  #     group: ${{ github.workflow }}-${{ inputs.environment }}
  #     cancel-in-progress: true
  #   environment: ${{ inputs.environment }}

  #   steps:
  #     # - name: Set up checkout branch
  #     #   id: checkout
  #     #   run: |
  #     #     if [[ ${{ inputs.environment }} == 'prod' ]]; then
  #     #       echo "branch=main" >> $GITHUB_OUTPUT
  #     #     elif [[ ${{ inputs.environment }} == 'alpha' ]]; then
  #     #       echo "branch=develop" >> $GITHUB_OUTPUT
  #     #     else
  #     #       echo "Invalid environment: ${{ inputs.environment }}"
  #     #       exit 1
  #     #     fi

  #     # - run: echo ${{ steps.checkout.outputs.branch }}

  #     # - name: Checkout code
  #     #   uses: actions/checkout@v4
  #     #   # with:
  #     #   #   ref: ${{ steps.checkout.outputs.branch }}

  #     # - name: Setup Node.js
  #     #   uses: actions/setup-node@v4
  #     #   with:
  #     #     node-version-file: .nvmrc
  #     #     cache: 'npm'

  #     # - name: Install dependencies
  #     #   run: npm ci
  #     #   env:
  #     #     # CI上では Husky を install しない
  #     #     # https://typicode.github.io/husky/how-to.html#ci-server-and-docker
  #     #     HUSKY: 0

  #     - name: Setup Node.js and Install dependencies
  #       uses: gawaooooo-sandbox/learn-github-actions-custom/composite/node-npm-setup@main

  #     - name: Build
  #       run: npm run generate
  #       env:
  #         BASE_URL: ${{vars.BASE_URL}}

  #     - name: Deploy to testing environment
  #       run: |
  #         echo "Deploying to testing environment"
  #         ls -la dist/
  #         echo "${{vars.TEST_HOGE}}"
